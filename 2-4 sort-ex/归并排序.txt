#include <iostream>
using namespace std;
void mergearray(int a[],int first,int mid,int last,int temp[]){
    int i = first,j = mid + 1;
    int m = mid,n = last;
    int k = 0;
    while(i <= m && j <= n){
        if(a[i] < a[j]) temp[k++] = a[i++];
        else temp[k++] = a[j++];
    }
    while(i <= m) temp[k++] = a[i++];
    while(j <= n) temp[k++] = a[j++];
    for (int l = 0; l < k; ++l) {
        a[first+l] = temp[l];
    }
}
void mergesort(int a[],int first,int last,int temp[])
{
    if(first < last)
    {
        int mid = (first + last)/2;
        mergesort(a,first,mid,temp);
        mergesort(a,mid+1,last,temp);
        mergearray(a,first,mid,last,temp);
    }
}
bool mergeSort(int a[],int n)
{
    int *p = new int[n];
    if(p == NULL) return false;
    mergesort(a,0,n-1,p);
    delete[](p);
    return true;
}
int main() {
    freopen("in.txt","r",stdin);
    int a[] = {8,4,5,7,1,3,6,2};
    mergeSort(a,8);
    for (int i = 0; i < 8; ++i) {
        cout << a[i] << " ";
    }
    return 0;
}