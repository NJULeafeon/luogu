//剪枝优化：prefix进行到一半如果已经杨辉和超过答案要求，再往后加数只会更大，所以直接返回
#include <iostream>
#include <stdlib.h>
#include <vector>
using namespace std;
int n;
int ansnum;
int visited[15] = {0};
int triangle[14][14] ={{1},{1,1},{1,2,1},{1,3,3,1},{1,4,6,4,1},{1,5,10,10,5,1},{1,6,15,20,15,6,1},{1,7,21,35,35,21,7,1},{1,8,28,56,70,56,28,8,1},
                       {1,9,36,84,126,126,84,36,9,1},{1,10,45,120,210,252,210,120,45,10,1},{1,11,55,165,330,462,462,330,165,55,11,1}};
vector<int> prefix;
int answer(){
    int ans = 0;
    for (int i = 1; i <= prefix.size(); ++i) {
        ans += triangle[n-1][i-1] * prefix[i-1];
    }
    return ans;
}
void dfs(int le){
    if(answer() > ansnum) return;
    else if(answer() == ansnum) {
        if(le < n) return;
        for (vector<int>::iterator it = prefix.begin(); it != prefix.end();it++) {
            cout << *it << " ";
        }
        exit(0);
    }
    else{
        for (int i = 1; i <= n; ++i) {
            if(visited[i]) continue;
            visited[i] = 1;
            prefix.push_back(i);
            le++;
            dfs(le);
            le--;
            visited[prefix[prefix.size() - 1]] = 0;
            prefix.pop_back();
        }
    }
}

int main() {
    freopen("in.txt","r",stdin);
    cin >> n >> ansnum;
    dfs(0);
    return 0;
}