//WA 01 9-a 数字与字符
//WA 02 -4- 开头-
//WA 03 -- 连-

#include <iostream>
#include <ctype.h>
#include<string>
using namespace std;
int main()
{
    freopen("in.txt","r",stdin);
    int p1,p2,p3;
    cin >> p1 >> p2 >> p3;
    string s;
    cin >> s;
    cout << s[0];
    for (int i = 1; i < s.size()-1; ++i) {
        if (s[i] != '-' || (s[i] == '-' && s[i-1] == '-')) cout << s[i];
        else{
            if(s[i+1] <= s[i-1]) cout << '-';
            else if(s[i+1] - s[i-1] == 1) continue;
            else if(s[i+1] - s[i-1] >= 2 && (s[i+1] <= 57 || (s[i-1] >= 65 && s[i+1] <=90) ||(s[i-1] >= 97)))
            {
                if(p1 == 3){
                    for (int j = 0; j < p2 * (s[i+1] - s[i-1] - 1); ++j) {
                        cout << '*';
                    }
                }
                else if(p1 == 1)
                {
                    if (p3 == 1)
                    {
                        for (int j = 0; j < (s[i+1] - s[i-1] - 1); ++j) {
                            for (int k = 0; k < p2; ++k) {
                                cout << char(tolower(s[i-1] + j + 1)) ;
                            }
                        }
                    }
                    else if(p3 == 2)
                    {
                        for (int j = 0; j < (s[i+1] - s[i-1] - 1); ++j) {
                            for (int k = 0; k < p2; ++k) {
                                cout << char(tolower(s[i+1] - j - 1)) ;
                            }
                        }
                    }
                }
                else if(p1 == 2)
                {
                    if (p3 == 1)
                    {
                        for (int j = 0; j < (s[i+1] - s[i-1] - 1); ++j) {
                            for (int k = 0; k < p2; ++k) {
                                cout << char(toupper(s[i-1] + j + 1)) ;
                            }
                        }
                    }
                    else if(p3 == 2)
                    {
                        for (int j = 0; j < (s[i+1] - s[i-1] - 1); ++j) {
                            for (int k = 0; k < p2; ++k) {
                                cout << char(toupper(s[i+1] - j - 1)) ;
                            }
                        }
                    }
                }
            }
            else cout << s[i];
        }
    }
    cout << s[s.size()-1];
    return 0;
}